<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonDe.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QCORXhpZgAATU0AKgAAAAgAAgESAAMAAAABAAEAAIdpAAQAAAAB
        AAAAJgAAAAAABJADAAIAAAAUAAAAXJAEAAIAAAAUAAAAcJKRAAIAAAADMjEAAJKSAAIAAAADMjEAAAAA
        AAAyMDIwOjAyOjI1IDExOjM5OjQ5ADIwMjA6MDI6MjUgMTE6Mzk6NDkAAAD/2wBDAAYEBQYFBAYGBQYH
        BwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcH
        BwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo
        KCj/wAARCACSAJYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAA
        AgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRol
        JicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QA
        HwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
        BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RV
        VldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPE
        xcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD1zU7z7NGcVitrbe9W
        /EJ/dmuWZqgDabW296Ydcb0NYpNOVc0AbK60x7GpF1dz/Caz7aDdjinatfadodibvVbmO3hHALHlj6KO
        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
</value>
  </data>
</root>